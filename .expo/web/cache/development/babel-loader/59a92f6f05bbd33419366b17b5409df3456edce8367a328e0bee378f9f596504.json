{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nvar HISTORY_COLLECTION = '@ignite_quiz:history';\nexport function historyGetAll() {\n  return _historyGetAll.apply(this, arguments);\n}\nfunction _historyGetAll() {\n  _historyGetAll = _asyncToGenerator(function* () {\n    try {\n      var storage = yield AsyncStorage.getItem(HISTORY_COLLECTION);\n      var history = storage ? JSON.parse(storage) : [];\n      return history;\n    } catch (error) {\n      Alert.alert('Opa', 'Não foi possível obter o histórico.');\n      return [];\n    }\n  });\n  return _historyGetAll.apply(this, arguments);\n}\nexport function historyAdd(_x) {\n  return _historyAdd.apply(this, arguments);\n}\nfunction _historyAdd() {\n  _historyAdd = _asyncToGenerator(function* (newHistory) {\n    try {\n      var response = yield historyGetAll();\n      var storedHistory = response ? response : [];\n      var storage = JSON.stringify([].concat(_toConsumableArray(storedHistory), [newHistory]));\n      yield AsyncStorage.setItem(HISTORY_COLLECTION, storage);\n    } catch (error) {\n      throw error;\n    }\n  });\n  return _historyAdd.apply(this, arguments);\n}\nexport function historyRemove(_x2) {\n  return _historyRemove.apply(this, arguments);\n}\nfunction _historyRemove() {\n  _historyRemove = _asyncToGenerator(function* (id) {\n    try {\n      var storage = yield historyGetAll();\n      var filtered = storage.filter(function (history) {\n        return history.id !== id;\n      });\n      var histories = JSON.stringify(filtered);\n      yield AsyncStorage.setItem(HISTORY_COLLECTION, histories);\n    } catch (error) {\n      throw error;\n    }\n  });\n  return _historyRemove.apply(this, arguments);\n}","map":{"version":3,"names":["AsyncStorage","Alert","HISTORY_COLLECTION","historyGetAll","_historyGetAll","apply","arguments","_asyncToGenerator","storage","getItem","history","JSON","parse","error","alert","historyAdd","_x","_historyAdd","newHistory","response","storedHistory","stringify","concat","_toConsumableArray","setItem","historyRemove","_x2","_historyRemove","id","filtered","filter","histories"],"sources":["C:/quizApp-ReactNative/src/storage/quizHistoryStorage.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { HistoryProps } from '../components/HistoryCard';\nimport { Alert } from 'react-native';\n\nconst HISTORY_COLLECTION = '@ignite_quiz:history';\n\nexport async function historyGetAll() {\n  try {\n    const storage = await AsyncStorage.getItem(HISTORY_COLLECTION);\n    const history: HistoryProps[] = storage ? JSON.parse(storage) : [];\n\n    return history;\n  } catch (error) {\n    Alert.alert('Opa', 'Não foi possível obter o histórico.');\n\n    return [];\n  }\n}\n\nexport async function historyAdd(newHistory: HistoryProps) {\n  try {\n    const response = await historyGetAll();\n    const storedHistory = response ? response : [];\n\n    const storage = JSON.stringify([...storedHistory, newHistory]);\n\n    await AsyncStorage.setItem(HISTORY_COLLECTION, storage);\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function historyRemove(id: string) {\n  try {\n    const storage = await historyGetAll();\n\n    const filtered = storage.filter(history => history.id !== id);\n    const histories = JSON.stringify(filtered);\n\n    await AsyncStorage.setItem(HISTORY_COLLECTION, histories);\n  } catch (error) {\n    throw error;\n  }\n}"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,2CAA2C;AAAC,OAAAC,KAAA;AAIrE,IAAMC,kBAAkB,GAAG,sBAAsB;AAEjD,gBAAsBC,aAAaA,CAAA;EAAA,OAAAC,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAWlC,SAAAF,eAAA;EAAAA,cAAA,GAAAG,iBAAA,CAXM,aAA+B;IACpC,IAAI;MACF,IAAMC,OAAO,SAASR,YAAY,CAACS,OAAO,CAACP,kBAAkB,CAAC;MAC9D,IAAMQ,OAAuB,GAAGF,OAAO,GAAGG,IAAI,CAACC,KAAK,CAACJ,OAAO,CAAC,GAAG,EAAE;MAElE,OAAOE,OAAO;IAChB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdZ,KAAK,CAACa,KAAK,CAAC,KAAK,EAAE,qCAAqC,CAAC;MAEzD,OAAO,EAAE;IACX;EACF,CAAC;EAAA,OAAAV,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBS,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA;AAW/B,SAAAW,YAAA;EAAAA,WAAA,GAAAV,iBAAA,CAXM,WAA0BW,UAAwB,EAAE;IACzD,IAAI;MACF,IAAMC,QAAQ,SAAShB,aAAa,CAAC,CAAC;MACtC,IAAMiB,aAAa,GAAGD,QAAQ,GAAGA,QAAQ,GAAG,EAAE;MAE9C,IAAMX,OAAO,GAAGG,IAAI,CAACU,SAAS,IAAAC,MAAA,CAAAC,kBAAA,CAAKH,aAAa,IAAEF,UAAU,EAAC,CAAC;MAE9D,MAAMlB,YAAY,CAACwB,OAAO,CAACtB,kBAAkB,EAAEM,OAAO,CAAC;IACzD,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,OAAAI,WAAA,CAAAZ,KAAA,OAAAC,SAAA;AAAA;AAED,gBAAsBmB,aAAaA,CAAAC,GAAA;EAAA,OAAAC,cAAA,CAAAtB,KAAA,OAAAC,SAAA;AAAA;AAWlC,SAAAqB,eAAA;EAAAA,cAAA,GAAApB,iBAAA,CAXM,WAA6BqB,EAAU,EAAE;IAC9C,IAAI;MACF,IAAMpB,OAAO,SAASL,aAAa,CAAC,CAAC;MAErC,IAAM0B,QAAQ,GAAGrB,OAAO,CAACsB,MAAM,CAAC,UAAApB,OAAO;QAAA,OAAIA,OAAO,CAACkB,EAAE,KAAKA,EAAE;MAAA,EAAC;MAC7D,IAAMG,SAAS,GAAGpB,IAAI,CAACU,SAAS,CAACQ,QAAQ,CAAC;MAE1C,MAAM7B,YAAY,CAACwB,OAAO,CAACtB,kBAAkB,EAAE6B,SAAS,CAAC;IAC3D,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,OAAAc,cAAA,CAAAtB,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}