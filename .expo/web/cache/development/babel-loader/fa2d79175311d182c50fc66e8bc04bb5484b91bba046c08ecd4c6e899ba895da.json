{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport axios from \"axios\";\nimport { styles } from \"./style\";\nimport PrimaryButton from \"../../components/PrimaryButton\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Dialog, AlertNotificationRoot, ALERT_TYPE } from \"react-native-alert-notification\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function InputNewPass() {\n  var _useNavigation = useNavigation(),\n    navigate = _useNavigation.navigate;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    newPassword = _useState2[0],\n    setNewPassword = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmPassword = _useState4[0],\n    setConfirmPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    email = _useState8[0],\n    setEmail = _useState8[1];\n  useEffect(function () {\n    getEmailFromStorage();\n  }, []);\n  var getEmailFromStorage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var storedEmail = yield AsyncStorage.getItem(\"email\");\n        if (storedEmail) {\n          setEmail(storedEmail);\n        }\n      } catch (error) {\n        console.error(\"Error fetching email from storage:\", error);\n      }\n    });\n    return function getEmailFromStorage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleUpdatePassword = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        if (newPassword !== confirmPassword) {\n          Dialog.show({\n            type: ALERT_TYPE.DANGER,\n            title: \"Error\",\n            textBody: \"Kata sandi tidak sesuai\",\n            button: \"Close\"\n          });\n          return;\n        }\n        var response = yield axios.post(\"https://server-side-quiz-react-native.vercel.app/user/change-pass\", {\n          email: email,\n          newPassword: newPassword\n        });\n        console.log(\"Response from backend:\", response.data);\n        navigate(\"successPass\");\n      } catch (error) {\n        console.error(\"Error updating password:\", error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleUpdatePassword() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(AlertNotificationRoot, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Spinner, {\n        visible: loading,\n        textContent: \"Loading...\",\n        textStyle: styles.spinnerText\n      }), _jsx(Image, {\n        style: {\n          width: 300,\n          height: 300\n        },\n        source: require(\"../../assets/smarta-icon.png\")\n      }), _jsxs(View, {\n        style: styles.content,\n        children: [_jsx(View, {\n          children: _jsx(Text, {\n            style: styles.title,\n            children: \"Pemulihan Kata Sandi\"\n          })\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            style: styles.subTitle,\n            children: \"Masukkan kata sandi baru\"\n          })\n        }), _jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Masukkan password baru\",\n            secureTextEntry: true,\n            value: newPassword,\n            onChangeText: function onChangeText(text) {\n              return setNewPassword(text);\n            }\n          })\n        }), _jsx(View, {\n          style: styles.inputContainer2,\n          children: _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Masukkan konfirmasi password\",\n            secureTextEntry: true,\n            value: confirmPassword,\n            onChangeText: function onChangeText(text) {\n              return setConfirmPassword(text);\n            }\n          })\n        })]\n      }), _jsx(PrimaryButton, {\n        title: \"Lanjutkan\",\n        onPress: handleUpdatePassword\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","TextInput","axios","styles","PrimaryButton","useNavigation","Spinner","AsyncStorage","Dialog","AlertNotificationRoot","ALERT_TYPE","jsx","_jsx","jsxs","_jsxs","InputNewPass","_useNavigation","navigate","_useState","_useState2","_slicedToArray","newPassword","setNewPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","loading","setLoading","_useState7","_useState8","email","setEmail","getEmailFromStorage","_ref","_asyncToGenerator","storedEmail","getItem","error","console","apply","arguments","handleUpdatePassword","_ref2","show","type","DANGER","title","textBody","button","response","post","log","data","children","style","container","visible","textContent","textStyle","spinnerText","width","height","source","require","content","subTitle","inputContainer","input","placeholder","secureTextEntry","value","onChangeText","text","inputContainer2","onPress"],"sources":["C:/quizApp-ReactNative/src/screens/InputNewPass/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, Image, TextInput, Button } from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { styles } from \"./style\";\r\nimport PrimaryButton from \"../../components/PrimaryButton\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport Spinner from \"react-native-loading-spinner-overlay\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Dialog, AlertNotificationRoot, ALERT_TYPE } from \"react-native-alert-notification\";\r\n\r\nexport function InputNewPass() {\r\n  const { navigate } = useNavigation();\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getEmailFromStorage();\r\n  }, []);\r\n\r\n  const getEmailFromStorage = async () => {\r\n    try {\r\n      const storedEmail = await AsyncStorage.getItem(\"email\");\r\n      if (storedEmail) {\r\n        setEmail(storedEmail);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching email from storage:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdatePassword = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      if (newPassword !== confirmPassword) {\r\n        // Use the Dialog to show the alert notification\r\n        Dialog.show({\r\n          type: ALERT_TYPE.DANGER,\r\n          title: \"Error\",\r\n          textBody: \"Kata sandi tidak sesuai\",\r\n          button: \"Close\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post(\r\n        \"https://server-side-quiz-react-native.vercel.app/user/change-pass\",\r\n        {\r\n          email: email,\r\n          newPassword: newPassword,\r\n        }\r\n      );\r\n      console.log(\"Response from backend:\", response.data);\r\n      navigate(\"successPass\");\r\n    } catch (error) {\r\n      console.error(\"Error updating password:\", error);\r\n      // Handle error as needed\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AlertNotificationRoot>\r\n      <View style={styles.container}>\r\n        <Spinner\r\n          visible={loading}\r\n          textContent={\"Loading...\"}\r\n          textStyle={styles.spinnerText}\r\n        />\r\n        <Image\r\n          style={{ width: 300, height: 300 }}\r\n          source={require(\"../../assets/smarta-icon.png\")}\r\n        />\r\n        <View style={styles.content}>\r\n          <View>\r\n            <Text style={styles.title}>Pemulihan Kata Sandi</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.subTitle}>Masukkan kata sandi baru</Text>\r\n          </View>\r\n          <View style={styles.inputContainer}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Masukkan password baru\"\r\n              secureTextEntry={true}\r\n              value={newPassword}\r\n              onChangeText={(text) => setNewPassword(text)}\r\n            />\r\n          </View>\r\n          <View style={styles.inputContainer2}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Masukkan konfirmasi password\"\r\n              secureTextEntry={true}\r\n              value={confirmPassword}\r\n              onChangeText={(text) => setConfirmPassword(text)}\r\n            />\r\n          </View>\r\n        </View>\r\n        <PrimaryButton title=\"Lanjutkan\" onPress={handleUpdatePassword} />\r\n      </View>\r\n    </AlertNotificationRoot>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}