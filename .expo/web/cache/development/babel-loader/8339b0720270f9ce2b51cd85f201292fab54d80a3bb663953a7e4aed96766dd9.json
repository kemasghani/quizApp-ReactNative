{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport axios from \"axios\";\nimport { styles } from \"./style\";\nimport PrimaryButton from \"../../components/PrimaryButton\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function InputOTP() {\n  var _useNavigation = useNavigation(),\n    navigate = _useNavigation.navigate;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    otp = _useState2[0],\n    setOtp = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  useEffect(function () {\n    getEmailFromStorage();\n  }, []);\n  var getEmailFromStorage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var storedEmail = yield AsyncStorage.getItem(\"email\");\n        if (storedEmail) {\n          setEmail(storedEmail);\n        }\n      } catch (error) {\n        console.error(\"Error fetching email from storage:\", error);\n      }\n    });\n    return function getEmailFromStorage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleVerifyOtp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var response = yield axios.post(\"https://server-side-quiz-react-native.vercel.app/user/submit-otp\", {\n          email: email,\n          otp: otp\n        });\n        console.log(\"Response from backend:\", response.data);\n        navigate(\"inputNewPass\");\n      } catch (error) {\n        console.error(\"Error verifying OTP:\", error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleVerifyOtp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Spinner, {\n      visible: loading,\n      textContent: \"Loading...\",\n      textStyle: styles.spinnerText\n    }), _jsx(Image, {\n      style: {\n        width: 300,\n        height: 300\n      },\n      source: require(\"../../assets/smarta-icon.png\")\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: styles.title,\n          children: \"Kode Verifikasi\"\n        })\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.subTitle,\n          children: \"Tolong salin kode verifikasi dari email untuk melakukan pemulihan akun\"\n        })\n      }), _jsx(View, {\n        style: styles.inputContainer,\n        children: _jsx(TextInput, {\n          style: [styles.input, {\n            textAlign: \"center\"\n          }],\n          placeholder: \"Masukkan kode Anda\",\n          keyboardType: \"numeric\",\n          value: otp,\n          onChangeText: function onChangeText(text) {\n            return setOtp(text);\n          }\n        })\n      })]\n    }), _jsx(PrimaryButton, {\n      title: \"Lanjutkan\",\n      onPress: handleVerifyOtp\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","TextInput","axios","styles","PrimaryButton","useNavigation","Spinner","AsyncStorage","jsx","_jsx","jsxs","_jsxs","InputOTP","_useNavigation","navigate","_useState","_useState2","_slicedToArray","otp","setOtp","_useState3","_useState4","loading","setLoading","_useState5","_useState6","email","setEmail","getEmailFromStorage","_ref","_asyncToGenerator","storedEmail","getItem","error","console","apply","arguments","handleVerifyOtp","_ref2","response","post","log","data","style","container","children","visible","textContent","textStyle","spinnerText","width","height","source","require","content","title","subTitle","inputContainer","input","textAlign","placeholder","keyboardType","value","onChangeText","text","onPress"],"sources":["C:/quizApp-ReactNative/src/screens/InputOTP/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, Image, TextInput } from \"react-native\";\r\nimport axios from \"axios\"; // Import Axios\r\nimport { styles } from \"./style\";\r\nimport PrimaryButton from \"../../components/PrimaryButton\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport Spinner from \"react-native-loading-spinner-overlay\"; // Import Spinner\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport function InputOTP() {\r\n  const { navigate } = useNavigation();\r\n  const [otp, setOtp] = useState(\"\"); // State to store the OTP entered by the user\r\n  const [loading, setLoading] = useState(false); // State to handle loading\r\n  const [email, setEmail] = useState(\"\"); // State to store the email\r\n\r\n  useEffect(() => {\r\n    // Fetch email from AsyncStorage when component mounts\r\n    getEmailFromStorage();\r\n  }, []);\r\n\r\n  const getEmailFromStorage = async () => {\r\n    try {\r\n      const storedEmail = await AsyncStorage.getItem(\"email\");\r\n      if (storedEmail) {\r\n        setEmail(storedEmail);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching email from storage:\", error);\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    try {\r\n      setLoading(true); // Show loading spinner\r\n\r\n      const response = await axios.post(\r\n        \"https://server-side-quiz-react-native.vercel.app/user/submit-otp\",\r\n        {\r\n          email: email, // Use the fetched email\r\n          otp: otp,\r\n        }\r\n      );\r\n      console.log(\"Response from backend:\", response.data);\r\n\r\n      // Proceed to the next screen if OTP verification is successful\r\n      navigate(\"inputNewPass\");\r\n    } catch (error) {\r\n      console.error(\"Error verifying OTP:\", error);\r\n      // Handle error as needed\r\n    } finally {\r\n      setLoading(false); // Hide loading spinner\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Spinner\r\n        visible={loading}\r\n        textContent={\"Loading...\"}\r\n        textStyle={styles.spinnerText}\r\n      />\r\n      <Image\r\n        style={{ width: 300, height: 300 }}\r\n        source={require(\"../../assets/smarta-icon.png\")}\r\n      />\r\n      <View style={styles.content}>\r\n        <View>\r\n          <Text style={styles.title}>Kode Verifikasi</Text>\r\n        </View>\r\n        <View>\r\n          <Text style={styles.subTitle}>\r\n            Tolong salin kode verifikasi dari email untuk melakukan pemulihan\r\n            akun\r\n          </Text>\r\n        </View>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={[styles.input, { textAlign: \"center\" }]} // Center the placeholder text\r\n            placeholder=\"Masukkan kode Anda\"\r\n            keyboardType=\"numeric\"\r\n            value={otp}\r\n            onChangeText={(text) => setOtp(text)}\r\n          />\r\n        </View>\r\n      </View>\r\n      <PrimaryButton title=\"Lanjutkan\" onPress={handleVerifyOtp} />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}