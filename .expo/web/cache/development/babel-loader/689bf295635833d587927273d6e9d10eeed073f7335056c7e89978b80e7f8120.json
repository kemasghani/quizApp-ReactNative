{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { Audio } from \"expo-av\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SplashScreen = function SplashScreen() {\n  var scaleAnim = new Animated.Value(0);\n  useEffect(function () {\n    var playSound = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var soundObject = new Audio.Sound();\n        try {\n          yield soundObject.loadAsync(require(\"../../assets/opening.mp3\"));\n          yield soundObject.playAsync();\n        } catch (error) {\n          console.log(\"Error loading sound:\", error);\n        }\n      });\n      return function playSound() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    playSound();\n    Animated.timing(scaleAnim, {\n      toValue: 1,\n      duration: 3000,\n      easing: Easing.out(Easing.quad),\n      useNativeDriver: true\n    }).start();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Animated.View, {\n      style: [styles.imageContainer, {\n        transform: [{\n          scale: scaleAnim\n        }]\n      }],\n      children: _jsx(Image, {\n        style: styles.image,\n        source: require(\"../../assets/smarta-icon.png\"),\n        resizeMode: \"contain\"\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#202024\"\n  },\n  imageContainer: {\n    width: 400,\n    height: 400\n  },\n  image: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\"\n  }\n});\nexport default SplashScreen;","map":{"version":3,"names":["React","useEffect","View","StyleSheet","Animated","Image","Easing","Audio","jsx","_jsx","SplashScreen","scaleAnim","Value","playSound","_ref","_asyncToGenerator","soundObject","Sound","loadAsync","require","playAsync","error","console","log","apply","arguments","timing","toValue","duration","easing","out","quad","useNativeDriver","start","style","styles","container","children","imageContainer","transform","scale","image","source","resizeMode","create","flex","justifyContent","alignItems","backgroundColor","width","height"],"sources":["C:/quizApp-ReactNative/src/screens/SplashScreen/index.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { View, StyleSheet, Animated, Image, Easing } from \"react-native\";\r\nimport { Audio } from \"expo-av\"; // Import Audio from expo-av for sound playback\r\n\r\nconst SplashScreen = () => {\r\n  const scaleAnim = new Animated.Value(0); // Initialize scaleAnim as an Animated.Value\r\n\r\n  useEffect(() => {\r\n    const playSound = async () => {\r\n      const soundObject = new Audio.Sound(); // Create a new Audio.Sound object\r\n      try {\r\n        await soundObject.loadAsync(require(\"../../assets/opening.mp3\")); // Load your sound file (replace 'sound.mp3' with your actual sound file)\r\n        await soundObject.playAsync(); // Play the loaded sound\r\n      } catch (error) {\r\n        console.log(\"Error loading sound:\", error);\r\n      }\r\n    };\r\n\r\n    playSound(); // Call the playSound function when the component mounts\r\n\r\n    Animated.timing(scaleAnim, {\r\n      toValue: 1,\r\n      duration: 3000, // Adjust duration as needed\r\n      easing: Easing.out(Easing.quad), // Apply easing for smoother animation\r\n      useNativeDriver: true,\r\n    }).start(); // Start the animation when the component mounts\r\n  }, []); // Empty dependency array ensures the effect runs only once\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Animated.View\r\n        style={[styles.imageContainer, { transform: [{ scale: scaleAnim }] }]}\r\n      >\r\n        <Image\r\n          style={styles.image}\r\n          source={require(\"../../assets/smarta-icon.png\")} // Replace 'smarta-icon.png' with your actual image path\r\n          resizeMode=\"contain\" // Adjust resizeMode as needed\r\n        />\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#202024\", // Set your splash screen background color\r\n  },\r\n  imageContainer: {\r\n    width: 400, // Adjust width and height as needed\r\n    height: 400,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n});\r\n\r\nexport default SplashScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,MAAA;AAEzC,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEhC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAMC,SAAS,GAAG,IAAIP,QAAQ,CAACQ,KAAK,CAAC,CAAC,CAAC;EAEvCX,SAAS,CAAC,YAAM;IACd,IAAMY,SAAS;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAMC,WAAW,GAAG,IAAIT,KAAK,CAACU,KAAK,CAAC,CAAC;QACrC,IAAI;UACF,MAAMD,WAAW,CAACE,SAAS,CAACC,OAAO,2BAA2B,CAAC,CAAC;UAChE,MAAMH,WAAW,CAACI,SAAS,CAAC,CAAC;QAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;QAC5C;MACF,CAAC;MAAA,gBARKR,SAASA,CAAA;QAAA,OAAAC,IAAA,CAAAU,KAAA,OAAAC,SAAA;MAAA;IAAA,GAQd;IAEDZ,SAAS,CAAC,CAAC;IAEXT,QAAQ,CAACsB,MAAM,CAACf,SAAS,EAAE;MACzBgB,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAEvB,MAAM,CAACwB,GAAG,CAACxB,MAAM,CAACyB,IAAI,CAAC;MAC/BC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,OACExB,IAAA,CAACP,IAAI;IAACgC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5B5B,IAAA,CAACL,QAAQ,CAACF,IAAI;MACZgC,KAAK,EAAE,CAACC,MAAM,CAACG,cAAc,EAAE;QAAEC,SAAS,EAAE,CAAC;UAAEC,KAAK,EAAE7B;QAAU,CAAC;MAAE,CAAC,CAAE;MAAA0B,QAAA,EAEtE5B,IAAA,CAACJ,KAAK;QACJ6B,KAAK,EAAEC,MAAM,CAACM,KAAM;QACpBC,MAAM,EAAEvB,OAAO,+BAA+B,CAAE;QAChDwB,UAAU,EAAC;MAAS,CACrB;IAAC,CACW;EAAC,CACZ,CAAC;AAEX,CAAC;AAED,IAAMR,MAAM,GAAGhC,UAAU,CAACyC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDV,cAAc,EAAE;IACdW,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC;EACDT,KAAK,EAAE;IACLI,IAAI,EAAE,CAAC;IACPI,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,eAAexC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}