{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { styles } from \"./style\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RankingList = function RankingList(_ref) {\n  var data = _ref.data;\n  var getRankImage = function getRankImage(index) {\n    switch (index) {\n      case 0:\n        return require(\"../../assets/rank-1.svg\");\n      case 1:\n        return require(\"../../assets/rank-2.svg\");\n      case 2:\n        return require(\"../../assets/rank-3.svg\");\n      default:\n        return require(\"../../assets/edit-icon.svg\");\n    }\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n      index = _ref2.index;\n    return _jsxs(View, {\n      children: [_jsxs(View, {\n        style: styles.rankingContainer,\n        children: [_jsx(Image, {\n          source: getRankImage(index),\n          style: styles.rankIcon\n        }), _jsx(Text, {\n          style: styles.rank,\n          children: `Rank ${index + 1}`\n        })]\n      }), _jsxs(View, {\n        style: styles.row,\n        children: [_jsx(Image, {\n          source: {\n            uri: item.imageUri\n          },\n          style: styles.image\n        }), _jsxs(View, {\n          style: styles.textContainer,\n          children: [_jsx(Text, {\n            style: styles.user,\n            children: item.user\n          }), _jsxs(Text, {\n            style: styles.nilai,\n            children: [\"Total Nilai : \", item.nilai]\n          })]\n        })]\n      })]\n    }, item.id);\n  };\n  return _jsx(FlatList, {\n    data: data,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    }\n  });\n};\nexport { RankingList };","map":{"version":3,"names":["React","View","Image","Text","FlatList","styles","jsx","_jsx","jsxs","_jsxs","RankingList","_ref","data","getRankImage","index","require","renderItem","_ref2","item","children","style","rankingContainer","source","rankIcon","rank","row","uri","imageUri","image","textContainer","user","nilai","id","keyExtractor","toString"],"sources":["C:/quizApp-ReactNative/src/components/RankingList/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Image, Text, FlatList } from 'react-native';\r\nimport { styles } from './style';\r\n\r\nconst RankingList = ({ data }) => {\r\n  const getRankImage = (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        return require('../../assets/rank-1.svg');\r\n      case 1:\r\n        return require('../../assets/rank-2.svg');\r\n      case 2:\r\n        return require('../../assets/rank-3.svg');\r\n      default:\r\n        return require('../../assets/edit-icon.svg'); // Provide a default image or handle other ranks as needed\r\n    }\r\n  };\r\n\r\n  const renderItem = ({ item, index }) => (\r\n    <View key={item.id}>\r\n      <View style={styles.rankingContainer}>\r\n        <Image\r\n          source={getRankImage(index)} // Use the getRankImage function to get the appropriate image source\r\n          style={styles.rankIcon}\r\n        />\r\n        <Text style={styles.rank}>{`Rank ${index + 1}`}</Text>\r\n      </View>\r\n      <View style={styles.row}>\r\n        <Image\r\n          source={{ uri: item.imageUri }}\r\n          style={styles.image}\r\n        />\r\n        <View style={styles.textContainer}>\r\n          <Text style={styles.user}>{item.user}</Text>\r\n          <Text style={styles.nilai}>Total Nilai : {item.nilai}</Text>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <FlatList\r\n      data={data}\r\n      renderItem={renderItem}\r\n      keyExtractor={(item) => item.id.toString()}\r\n    />\r\n  );\r\n};\r\n\r\nexport { RankingList };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAE1B,SAASC,MAAM;AAAkB,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEjC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EACzB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;IAC9B,QAAQA,KAAK;MACX,KAAK,CAAC;QACJ,OAAOC,OAAO,0BAA0B,CAAC;MAC3C,KAAK,CAAC;QACJ,OAAOA,OAAO,0BAA0B,CAAC;MAC3C,KAAK,CAAC;QACJ,OAAOA,OAAO,0BAA0B,CAAC;MAC3C;QACE,OAAOA,OAAO,6BAA6B,CAAC;IAChD;EACF,CAAC;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;MAAEJ,KAAK,GAAAG,KAAA,CAALH,KAAK;IAAA,OAC/BL,KAAA,CAACR,IAAI;MAAAkB,QAAA,GACHV,KAAA,CAACR,IAAI;QAACmB,KAAK,EAAEf,MAAM,CAACgB,gBAAiB;QAAAF,QAAA,GACnCZ,IAAA,CAACL,KAAK;UACJoB,MAAM,EAAET,YAAY,CAACC,KAAK,CAAE;UAC5BM,KAAK,EAAEf,MAAM,CAACkB;QAAS,CACxB,CAAC,EACFhB,IAAA,CAACJ,IAAI;UAACiB,KAAK,EAAEf,MAAM,CAACmB,IAAK;UAAAL,QAAA,EAAG,QAAOL,KAAK,GAAG,CAAE;QAAC,CAAO,CAAC;MAAA,CAClD,CAAC,EACPL,KAAA,CAACR,IAAI;QAACmB,KAAK,EAAEf,MAAM,CAACoB,GAAI;QAAAN,QAAA,GACtBZ,IAAA,CAACL,KAAK;UACJoB,MAAM,EAAE;YAAEI,GAAG,EAAER,IAAI,CAACS;UAAS,CAAE;UAC/BP,KAAK,EAAEf,MAAM,CAACuB;QAAM,CACrB,CAAC,EACFnB,KAAA,CAACR,IAAI;UAACmB,KAAK,EAAEf,MAAM,CAACwB,aAAc;UAAAV,QAAA,GAChCZ,IAAA,CAACJ,IAAI;YAACiB,KAAK,EAAEf,MAAM,CAACyB,IAAK;YAAAX,QAAA,EAAED,IAAI,CAACY;UAAI,CAAO,CAAC,EAC5CrB,KAAA,CAACN,IAAI;YAACiB,KAAK,EAAEf,MAAM,CAAC0B,KAAM;YAAAZ,QAAA,GAAC,gBAAc,EAACD,IAAI,CAACa,KAAK;UAAA,CAAO,CAAC;QAAA,CACxD,CAAC;MAAA,CACH,CAAC;IAAA,GAjBEb,IAAI,CAACc,EAkBV,CAAC;EAAA,CACR;EAED,OACEzB,IAAA,CAACH,QAAQ;IACPQ,IAAI,EAAEA,IAAK;IACXI,UAAU,EAAEA,UAAW;IACvBiB,YAAY,EAAE,SAAAA,aAACf,IAAI;MAAA,OAAKA,IAAI,CAACc,EAAE,CAACE,QAAQ,CAAC,CAAC;IAAA;EAAC,CAC5C,CAAC;AAEN,CAAC;AAED,SAASxB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}