{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { styles } from \"./style\";\nimport PrimaryButton from \"../../components/PrimaryButton\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { ALERT_TYPE, Dialog, AlertNotificationRoot } from \"react-native-alert-notification\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Login() {\n  var _useNavigation = useNavigation(),\n    navigate = _useNavigation.navigate;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var requestBody = {\n          email: email,\n          password: password\n        };\n        console.log(\"Request Body:\", requestBody);\n        var response = yield axios.post(\"https://server-side-quiz-react-native.vercel.app/user/login\", requestBody, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        var userId = response.data.data.id;\n        console.log(response);\n        yield AsyncStorage.setItem(\"userId\", userId);\n        yield AsyncStorage.setItem(\"tokenEmail\", email);\n        yield AsyncStorage.setItem(\"loggedIn\", \"true\");\n        navigate(\"dashboard\");\n      } catch (error) {\n        setLoading(false);\n        console.log(error);\n        Dialog.show({\n          type: ALERT_TYPE.DANGER,\n          title: \"Error\",\n          textBody: \"Email atau password salah !\",\n          button: \"OK\"\n        });\n      }\n    });\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(AlertNotificationRoot, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Image, {\n        style: {\n          width: 300,\n          height: 300\n        },\n        source: require(\"../../assets/smarta-icon.png\")\n      }), _jsxs(View, {\n        style: styles.loginCard,\n        children: [_jsx(Text, {\n          style: styles.inputLabel,\n          children: \"Email\"\n        }), _jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.input,\n            value: email,\n            onChangeText: setEmail\n          })\n        }), _jsx(Text, {\n          style: styles.inputLabel,\n          children: \"Kata Sandi\"\n        }), _jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.input,\n            secureTextEntry: true,\n            value: password,\n            onChangeText: setPassword\n          })\n        }), _jsx(TouchableOpacity, {\n          style: {\n            alignItems: \"flex-end\",\n            marginBottom: 13\n          },\n          onPress: function onPress() {\n            return navigate(\"inputEmail\");\n          },\n          children: _jsx(Text, {\n            style: styles.textLink,\n            children: \"Lupa Kata Sandi?\"\n          })\n        }), _jsxs(View, {\n          style: {\n            alignContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [_jsx(PrimaryButton, {\n            title: \"Login\",\n            onPress: handleLogin\n          }), _jsx(Spinner, {\n            visible: loading,\n            textContent: \"Loading...\",\n            textStyle: styles.spinnerText\n          }), _jsxs(View, {\n            style: styles.footer,\n            children: [_jsx(Text, {\n              style: styles.footerText,\n              children: \"Belum Memiliki Akun? \"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigate(\"register\");\n              },\n              children: _jsx(Text, {\n                style: styles.textLink,\n                children: \"Daftar Sekarang\"\n              })\n            })]\n          })]\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","Image","TextInput","TouchableOpacity","styles","PrimaryButton","AsyncStorage","axios","useNavigation","ALERT_TYPE","Dialog","AlertNotificationRoot","Spinner","jsx","_jsx","jsxs","_jsxs","Login","_useNavigation","navigate","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","handleLogin","_ref","_asyncToGenerator","requestBody","console","log","response","post","headers","userId","data","id","setItem","error","show","type","DANGER","title","textBody","button","apply","arguments","children","style","container","width","height","source","require","loginCard","inputLabel","inputContainer","input","value","onChangeText","secureTextEntry","alignItems","marginBottom","onPress","textLink","alignContent","visible","textContent","textStyle","spinnerText","footer","footerText"],"sources":["C:/quizApp-ReactNative/src/screens/Login/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { styles } from \"./style\";\r\nimport PrimaryButton from \"../../components/PrimaryButton\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport axios from \"axios\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  ALERT_TYPE,\r\n  Dialog,\r\n  AlertNotificationRoot,\r\n} from \"react-native-alert-notification\";\r\nimport Spinner from \"react-native-loading-spinner-overlay\"; // Import Spinner\r\n\r\nexport function Login() {\r\n  const { navigate } = useNavigation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const requestBody = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n      console.log(\"Request Body:\", requestBody);\r\n\r\n      const response = await axios.post(\r\n        \"https://server-side-quiz-react-native.vercel.app/user/login\",\r\n        requestBody, // Use the requestBody in the post request\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      // Extract the user ID from the response\r\n      const userId = response.data.data.id;\r\n\r\n      console.log(response);\r\n\r\n      // Store the user ID and email in AsyncStorage\r\n      await AsyncStorage.setItem(\"userId\", userId);\r\n      await AsyncStorage.setItem(\"tokenEmail\", email);\r\n      await AsyncStorage.setItem(\"loggedIn\", \"true\");\r\n      navigate(\"dashboard\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n      Dialog.show({\r\n        type: ALERT_TYPE.DANGER,\r\n        title: \"Error\",\r\n        textBody: \"Email atau password salah !\",\r\n        button: \"OK\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AlertNotificationRoot>\r\n      <View style={styles.container}>\r\n        <Image\r\n          style={{ width: 300, height: 300 }}\r\n          source={require(\"../../assets/smarta-icon.png\")}\r\n        />\r\n        <View style={styles.loginCard}>\r\n          <Text style={styles.inputLabel}>Email</Text>\r\n          <View style={styles.inputContainer}>\r\n            <TextInput\r\n              style={styles.input}\r\n              value={email}\r\n              onChangeText={setEmail}\r\n            />\r\n          </View>\r\n          <Text style={styles.inputLabel}>Kata Sandi</Text>\r\n          <View style={styles.inputContainer}>\r\n            <TextInput\r\n              style={styles.input}\r\n              secureTextEntry={true}\r\n              value={password}\r\n              onChangeText={setPassword}\r\n            />\r\n          </View>\r\n          <TouchableOpacity\r\n            style={{ alignItems: \"flex-end\", marginBottom: 13 }}\r\n            onPress={() => navigate(\"inputEmail\")}\r\n          >\r\n            <Text style={styles.textLink}>Lupa Kata Sandi?</Text>\r\n          </TouchableOpacity>\r\n          <View style={{ alignContent: \"center\", alignItems: \"center\" }}>\r\n            <PrimaryButton title=\"Login\" onPress={handleLogin} />\r\n            <Spinner\r\n              visible={loading}\r\n              textContent={\"Loading...\"}\r\n              textStyle={styles.spinnerText}\r\n            />\r\n            <View style={styles.footer}>\r\n              <Text style={styles.footerText}>Belum Memiliki Akun? </Text>\r\n              <TouchableOpacity onPress={() => navigate(\"register\")}>\r\n                <Text style={styles.textLink}>Daftar Sekarang</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </AlertNotificationRoot>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}