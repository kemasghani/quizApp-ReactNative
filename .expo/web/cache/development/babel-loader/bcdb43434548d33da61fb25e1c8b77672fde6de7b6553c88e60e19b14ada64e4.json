{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport Animated, { useAnimatedStyle, useSharedValue, withTiming } from 'react-native-reanimated';\nimport { useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _worklet_204809477240_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    sharedProgress\\n  } = this._closure;\\n  return {\\n    width: sharedProgress.value + \\\"%\\\"\\n  };\\n}\",\n  location: \"C:\\\\quizApp-ReactNative\\\\src\\\\components\\\\ProgressBar\\\\index.tsx\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"sharedProgress\\\",\\\"_closure\\\",\\\"width\\\",\\\"value\\\"],\\\"sources\\\":[\\\"C:/quizApp-ReactNative/src/components/ProgressBar/index.tsx\\\"],\\\"mappings\\\":\\\"AAgByC,SAAAA,UAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,OAAO;IAC5CC,KAAK,EAAKF,cAAc,CAACG,KAAM;EACjC,CAAC;AAAA\\\",\\\"ignoreList\\\":[]}\"\n};\nexport function ProgressBar(_ref) {\n  var total = _ref.total,\n    current = _ref.current;\n  var percentage = Math.round(current / total * 100);\n  var sharedProgress = useSharedValue(percentage);\n  var styleAnimated = useAnimatedStyle(function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f() {\n      return {\n        width: `${sharedProgress.value}%`\n      };\n    };\n    _f._closure = {\n      sharedProgress: sharedProgress\n    };\n    _f.__initData = _worklet_204809477240_init_data;\n    _f.__workletHash = 204809477240;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }());\n  useEffect(function () {\n    sharedProgress.value = withTiming(percentage);\n  }, [current]);\n  return _jsx(View, {\n    style: styles.track,\n    children: _jsx(Animated.View, {\n      style: [styles.progress, styleAnimated]\n    })\n  });\n}","map":{"version":3,"names":["styles","Animated","useAnimatedStyle","useSharedValue","withTiming","useEffect","jsx","_jsx","_worklet_204809477240_init_data","code","location","sourceMap","ProgressBar","_ref","total","current","percentage","Math","round","sharedProgress","styleAnimated","_e","global","Error","_f","width","value","_closure","__initData","__workletHash","__stackDetails","__version","View","style","track","children","progress"],"sources":["C:/quizApp-ReactNative/src/components/ProgressBar/index.tsx"],"sourcesContent":["import { View } from 'react-native';\n\nimport { styles } from './styles';\nimport Animated, { useAnimatedStyle, useSharedValue, withTiming } from 'react-native-reanimated';\nimport { useEffect } from 'react';\n\ninterface Props {\n  total: number;\n  current: number;\n}\n\nexport function ProgressBar({ total, current }: Props) {\n  const percentage = Math.round((current / total) * 100);\n\n  const sharedProgress = useSharedValue(percentage);\n\n  const styleAnimated = useAnimatedStyle(() => ({\n    width: `${sharedProgress.value}%`\n  }));\n\n  useEffect(() => {\n    sharedProgress.value = withTiming(percentage);\n  }, [current]);\n\n  return (\n    <View style={styles.track}>\n      <Animated.View style={[styles.progress, styleAnimated]} />\n    </View>\n  );\n}\n"],"mappings":";AAEA,SAASA,MAAM;AACf,OAAOC,QAAQ,IAAIC,gBAAgB,EAAEC,cAAc,EAAEC,UAAU,QAAQ,yBAAyB;AAChG,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,IAAAC,+BAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AAOlC,OAAO,SAASC,WAAWA,CAAAC,IAAA,EAA4B;EAAA,IAAzBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EAC1C,IAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAEH,OAAO,GAAGD,KAAK,GAAI,GAAG,CAAC;EAEtD,IAAMK,cAAc,GAAGhB,cAAc,CAACa,UAAU,CAAC;EAEjD,IAAMI,aAAa,GAAGlB,gBAAgB;IAAA,IAAAmB,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,IAAAC,EAAA,GAAC,SAAAA,GAAA;MAAA,OAAO;QAC5CC,KAAK,EAAG,GAAEN,cAAc,CAACO,KAAM;MACjC,CAAC;IAAA,CAAC;IAAAF,EAAA,CAAAG,QAAA;MAAAR,cAAA,EAjBQA;IAAc;IAAAK,EAAA,CAAAI,UAAA,GAAApB,+BAAA;IAAAgB,EAAA,CAAAK,aAAA;IAAAL,EAAA,CAAAM,cAAA,GAAAT,EAAA;IAAAG,EAAA,CAAAO,SAAA;IAAA,OAAAP,EAAA;EAAA,GAiBtB,CAAC;EAEHnB,SAAS,CAAC,YAAM;IACdc,cAAc,CAACO,KAAK,GAAGtB,UAAU,CAACY,UAAU,CAAC;EAC/C,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EAEb,OACER,IAAA,CAACyB,IAAI;IAACC,KAAK,EAAEjC,MAAM,CAACkC,KAAM;IAAAC,QAAA,EACxB5B,IAAA,CAACN,QAAQ,CAAC+B,IAAI;MAACC,KAAK,EAAE,CAACjC,MAAM,CAACoC,QAAQ,EAAEhB,aAAa;IAAE,CAAE;EAAC,CACtD,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}