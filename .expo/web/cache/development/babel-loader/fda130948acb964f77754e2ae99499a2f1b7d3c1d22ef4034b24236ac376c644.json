{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Trash } from \"phosphor-react-native\";\nimport HistoryIcon from \"../../assets/history-icon.svg\";\nimport Animated, { Layout, SlideInRight, SlideOutRight } from \"react-native-reanimated\";\nimport { Swipeable } from \"react-native-gesture-handler\";\nimport { Header } from \"../../components/Header\";\nimport { HistoryCard } from \"../../components/HistoryCard\";\nimport { styles } from \"./styles\";\nimport { historyGetAll, historyRemove } from \"../../storage/quizHistoryStorage\";\nimport { Loading } from \"../../components/Loading\";\nimport { THEME } from \"../../styles/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function History() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    history = _useState4[0],\n    setHistory = _useState4[1];\n  var swipeableRefs = useRef([]);\n  var _useNavigation = useNavigation(),\n    goBack = _useNavigation.goBack;\n  function fetchHistory() {\n    return _fetchHistory.apply(this, arguments);\n  }\n  function _fetchHistory() {\n    _fetchHistory = _asyncToGenerator(function* () {\n      var response = yield historyGetAll();\n      setHistory(response);\n      setIsLoading(false);\n    });\n    return _fetchHistory.apply(this, arguments);\n  }\n  function remove(_x) {\n    return _remove.apply(this, arguments);\n  }\n  function _remove() {\n    _remove = _asyncToGenerator(function* (id) {\n      yield historyRemove(id);\n      fetchHistory();\n    });\n    return _remove.apply(this, arguments);\n  }\n  function handleRemove(id, index) {\n    var _swipeableRefs$curren;\n    (_swipeableRefs$curren = swipeableRefs.current) == null ? void 0 : _swipeableRefs$curren[index].close();\n    Alert.alert(\"Hapus\", \"Apakah anda ingin menghapus riwayat ?\", [{\n      text: \"Iya\",\n      onPress: function onPress() {\n        return remove(id);\n      }\n    }, {\n      text: \"Tidak\",\n      style: \"cancel\"\n    }]);\n  }\n  useEffect(function () {\n    fetchHistory();\n  }, []);\n  if (isLoading) {\n    return _jsx(Loading, {});\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Header, {\n      title: \"Riwayat\",\n      subtitle: `Sejarah Pendidikan Anda${\"\\n\"}telah dilakukan`,\n      icon1: null,\n      icon2: HistoryIcon,\n      onPress: goBack\n    }), _jsx(ScrollView, {\n      contentContainerStyle: styles.history,\n      showsVerticalScrollIndicator: false,\n      children: history.map(function (item, index) {\n        return _jsx(Animated.View, {\n          entering: SlideInRight,\n          exiting: SlideOutRight,\n          layout: Layout.springify(),\n          children: _jsx(Swipeable, {\n            ref: function ref(_ref) {\n              if (_ref) {\n                swipeableRefs.current.push(_ref);\n              }\n            },\n            containerStyle: styles.swipeContainer,\n            renderLeftActions: function renderLeftActions() {\n              return _jsx(View, {\n                style: styles.swipeRemove,\n                children: _jsx(Trash, {\n                  size: 32,\n                  color: THEME.COLORS.GREY_100\n                })\n              });\n            },\n            renderRightActions: function renderRightActions() {\n              return null;\n            },\n            overshootLeft: false,\n            leftThreshold: 10,\n            onSwipeableOpen: function onSwipeableOpen() {\n              return handleRemove(item.id, index);\n            },\n            children: _jsx(HistoryCard, {\n              data: item\n            })\n          })\n        }, item.id);\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigation","View","ScrollView","Alert","Trash","HistoryIcon","Animated","Layout","SlideInRight","SlideOutRight","Swipeable","Header","HistoryCard","styles","historyGetAll","historyRemove","Loading","THEME","jsx","_jsx","jsxs","_jsxs","History","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","history","setHistory","swipeableRefs","_useNavigation","goBack","fetchHistory","_fetchHistory","apply","arguments","_asyncToGenerator","response","remove","_x","_remove","id","handleRemove","index","_swipeableRefs$curren","current","close","alert","text","onPress","style","container","children","title","subtitle","icon1","icon2","contentContainerStyle","showsVerticalScrollIndicator","map","item","entering","exiting","layout","springify","ref","push","containerStyle","swipeContainer","renderLeftActions","swipeRemove","size","color","COLORS","GREY_100","renderRightActions","overshootLeft","leftThreshold","onSwipeableOpen","data"],"sources":["C:/quizApp-ReactNative/src/screens/History/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { View, ScrollView, Alert } from \"react-native\";\r\nimport { HouseLine, Trash } from \"phosphor-react-native\";\r\nimport HistoryIcon from '../../assets/history-icon.svg'\r\nimport Animated, {\r\n  Layout,\r\n  SlideInRight,\r\n  SlideOutRight,\r\n} from \"react-native-reanimated\";\r\nimport { Swipeable } from \"react-native-gesture-handler\";\r\n\r\nimport { Header } from \"../../components/Header\";\r\nimport { HistoryCard, HistoryProps } from \"../../components/HistoryCard\";\r\n\r\nimport { styles } from \"./styles\";\r\nimport { historyGetAll, historyRemove } from \"../../storage/quizHistoryStorage\";\r\nimport { Loading } from \"../../components/Loading\";\r\nimport { THEME } from \"../../styles/theme\";\r\n\r\nexport function History() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [history, setHistory] = useState<HistoryProps[]>([]);\r\n\r\n  const swipeableRefs = useRef<Swipeable[]>([]);\r\n\r\n  const { goBack } = useNavigation();\r\n\r\n  async function fetchHistory() {\r\n    const response = await historyGetAll();\r\n    setHistory(response);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  async function remove(id: string) {\r\n    await historyRemove(id);\r\n\r\n    fetchHistory();\r\n  }\r\n\r\n  function handleRemove(id: string, index: number) {\r\n    swipeableRefs.current?.[index].close();\r\n\r\n    Alert.alert(\"Hapus\", \"Apakah anda ingin menghapus riwayat ?\", [\r\n      {\r\n        text: \"Iya\",\r\n        onPress: () => remove(id),\r\n      },\r\n      { text: \"Tidak\", style: \"cancel\" },\r\n    ]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header\r\n        title=\"Riwayat\"\r\n        subtitle={`Sejarah Pendidikan Anda${\"\\n\"}telah dilakukan`}\r\n        icon1={null}\r\n        icon2={HistoryIcon}\r\n        onPress={goBack}\r\n      />\r\n\r\n      <ScrollView\r\n        contentContainerStyle={styles.history}\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        {history.map((item, index) => (\r\n          <Animated.View\r\n            key={item.id}\r\n            entering={SlideInRight}\r\n            exiting={SlideOutRight}\r\n            layout={Layout.springify()}\r\n          >\r\n            <Swipeable\r\n              ref={(ref) => {\r\n                if (ref) {\r\n                  swipeableRefs.current.push(ref);\r\n                }\r\n              }}\r\n              containerStyle={styles.swipeContainer}\r\n              renderLeftActions={() => (\r\n                <View style={styles.swipeRemove}>\r\n                  <Trash size={32} color={THEME.COLORS.GREY_100} />\r\n                </View>\r\n              )}\r\n              renderRightActions={() => null}\r\n              overshootLeft={false}\r\n              leftThreshold={10}\r\n              onSwipeableOpen={() => handleRemove(item.id, index)}\r\n            >\r\n              <HistoryCard data={item} />\r\n            </Swipeable>\r\n          </Animated.View>\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}